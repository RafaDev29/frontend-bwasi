{"version":3,"file":"js/584.b28e13d2.js","mappings":"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","sources":["webpack://frontend-ebox-platform/./src/api/AreaService.js","webpack://frontend-ebox-platform/./src/api/LayoutService.js","webpack://frontend-ebox-platform/./src/views/MonitoringPlans.vue","webpack://frontend-ebox-platform/./src/components/plans/ModalLayoutPlane.vue","webpack://frontend-ebox-platform/./src/components/plans/ModalLayoutPlane.vue?121a","webpack://frontend-ebox-platform/./src/components/plans/UploadPlanModal.vue","webpack://frontend-ebox-platform/./src/components/plans/UploadPlanModal.vue?6a98","webpack://frontend-ebox-platform/./src/views/MonitoringPlans.vue?016b","webpack://frontend-ebox-platform/../../../src/components/VTooltip/VTooltip.tsx"],"sourcesContent":["import axiosInstance from \"@/config/http.config\";\r\n\r\n\r\nconst baseURL = process.env.VUE_APP_BASE_URL;\r\n\r\nexport function listAreasApi(token) {\r\n  return axiosInstance.get(`${baseURL}/areas`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\nexport function deleteAreaApi(token, id) {\r\n  return axiosInstance.delete(`${baseURL}/areas/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\n\r\nexport function createAreaApi(token, payload) {\r\n  return axiosInstance.post(`${baseURL}/areas`,payload,  {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\n\r\nexport function updateAreaApi(token, payload, id) {\r\n  return axiosInstance.patch(`${baseURL}/areas/${id}`,payload,  {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\n\r\nexport function coordinatesAreaApi(token, payload, id) {\r\n  return axiosInstance.patch(`${baseURL}/areas/${id}`,payload,  {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\n\r\n\r\n","import axiosInstance from \"@/config/http.config\";\r\n\r\n\r\nconst baseURL = process.env.VUE_APP_BASE_URL;\r\n\r\nexport function listLayoutApi(token) {\r\n  return axiosInstance.get(`${baseURL}/layouts`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\nexport function deleteLayoutApi(token, id) {\r\n  return axiosInstance.delete(`${baseURL}/layouts/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\n\r\nexport function createLayoutApi(token, payload) {\r\n  return axiosInstance.post(`${baseURL}/layouts`,payload,  {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\n\r\nexport function updateLayoutApi(token, payload, id) {\r\n\r\n  return axiosInstance.patch(`${baseURL}/layouts/${id}`,payload,  {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\nexport function uploadLayoutApi(token, payload, id) {\r\n  return axiosInstance.post(`${baseURL}/layouts/updatebackgroundImage/${id}`,payload,  {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\n\r\n\r\n","<template>\n  <div class=\"flex justify-center items-center h-screen h-full relative\">\n    <div class=\"flex items-center justify-center bg-gray-100 mb-5 pb-5\">\n      <ModalLayoutPlane v-if=\"selectedLayout\" :key=\"selectedLayout._id\" :name=\"selectedLayout.name\"\n        :backgroundimage=\"selectedLayout.backgroundImage\" :areas=\"selectedLayout.areas\" @uploadPlans=\"openUploadModal\"\n        @areaSelected=\"selectCoordinates\" />\n    </div>\n\n    <!-- Bolas laterales con Vuetify tooltips -->\n    <div class=\"fixed top-1/2 right-5 transform -translate-y-1/2 flex flex-col items-center space-y-4\">\n      <v-tooltip v-for=\"(layout, index) in layouts\" :key=\"layout._id\" :text=\"layout.name\">\n        <template v-slot:activator=\"{ props }\">\n          <div v-bind=\"props\"\n            class=\"w-10 h-10 rounded-full cursor-pointer flex items-center justify-center transition-transform duration-300\"\n            :class=\"{\n              'bg-[#6999c2] text-white transform scale-110 shadow-lg': index === selectedIndex,\n              'bg-[#bfd3e6] text-gray-700 hover:bg-[#6999c2]': index !== selectedIndex,\n            }\" @click=\"selectLayout(index)\">\n            {{ index + 1 }}\n          </div>\n        </template>\n      </v-tooltip>\n    </div>\n\n    <!-- Modal para cargar plano -->\n    <UploadPlanModal v-if=\"showUploadModal\" :layoutId=\"selectedLayout._id\" @close=\"showUploadModal = false\"\n      @imageUploaded=\"handleImageUpload\" />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from \"vue\";\nimport { listLayoutApi, uploadLayoutApi } from \"@/api/LayoutService\";\nimport { coordinatesAreaApi } from \"@/api/AreaService\";\nimport ModalLayoutPlane from \"@/components/plans/ModalLayoutPlane.vue\";\nimport UploadPlanModal from \"@/components/plans/UploadPlanModal.vue\";\nimport store from \"@/store\";\n\nexport default {\n  components: {\n    ModalLayoutPlane,\n    UploadPlanModal,\n  },\n  setup() {\n    const layouts = ref([]);\n    const selectedIndex = ref(0);\n    const error = ref(null);\n    const showUploadModal = ref(false);\n    const token = store.state.token;\n\n    const listLayouts = async () => {\n      try {\n        const response = await listLayoutApi(token);\n        if (response && response.data && response.data.data) {\n          layouts.value = response.data.data;\n        } else {\n          error.value = response.data.message || \"Error al cargar los layouts\";\n        }\n      } catch (err) {\n        error.value = \"Error al conectar con el servidor. Por favor, inténtalo de nuevo.\";\n      }\n    };\n\n    const openUploadModal = () => {\n      showUploadModal.value = true;\n    };\n\n    const handleImageUpload = async (formData, id) => {\n      try {\n        const response = await uploadLayoutApi(token, formData, id);\n        if (response) {\n          await listLayouts();\n        }\n      } catch (error) {\n        console.error(\"error al cargar plano\");\n      }\n    };\n\n    const selectCoordinates = async (data) => {\n      const payload = { coordinates: data.coordinates };\n\n      try {\n        const response = await coordinatesAreaApi(token, payload, data.id);\n        if (response) {\n          await listLayouts();\n        }\n      } catch (error) {\n        console.error(\"error al crear area\");\n      }\n    };\n\n    const selectLayout = (index) => {\n      selectedIndex.value = index;\n    };\n\n    onMounted(listLayouts);\n\n    const selectedLayout = computed(() => {\n      const layout = layouts.value[selectedIndex.value];\n      return {\n        ...layout,\n        areas: layout ? layout.areas : [],\n      };\n    });\n\n    return {\n      layouts,\n      selectedLayout,\n      selectedIndex,\n      showUploadModal,\n      openUploadModal,\n      handleImageUpload,\n      selectLayout,\n      selectCoordinates,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.tooltip {\n  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;\n}\n</style>\n","<template>\n  <div class=\"relative flex flex-col items-center\">\n    <h1 class=\"text-gray-700 font-bold text-lg mb-2 relative w-full\">\n      {{ name }}\n      <!-- Ícono de editar -->\n      <i class=\"mdi mdi-image-edit text-3xl cursor-pointer absolute top-0 right-16 text-gray-700 hover:text-[#497fae]\"\n        @click=\"openUploadPlans\"></i>\n      <!-- Ícono de crear -->\n      <i :class=\"[\n        'mdi text-3xl cursor-pointer absolute top-0 right-4',\n        drawMode ? 'mdi-pencil-box-outline text-[#099cb4]' : 'mdi-pencil-box-outline text-gray-700 hover:text-#497fae-500'\n      ]\" @click=\"toggleDrawMode\"></i>\n      <!-- Ícono de cancelar dibujo -->\n      <i v-if=\"drawMode && currentArea.length > 0\"\n        class=\"mdi mdi-close-circle-outline text-3xl cursor-pointer absolute top-0 right-28 text-gray-700 hover:text-red-500\"\n        @click=\"cancelDraw\"></i>\n    </h1>\n\n    <div class=\"relative border border-gray-300 rounded-lg shadow-md\">\n      <v-stage ref=\"stage\" :config=\"stageConfig\">\n        <v-layer>\n          <!-- Imagen de fondo -->\n          <v-image v-if=\"backgroundimage\" :config=\"{\n            image: backgroundImg,\n            width: stageConfig.width,\n            height: stageConfig.height\n          }\" />\n\n          <!-- Áreas existentes -->\n          <template v-for=\"area in areas\" :key=\"area._id\">\n            <v-shape :config=\"{\n              sceneFunc: (context, shape) => {\n                const points = parseCoordinates(area.coordinates);\n                context.beginPath();\n                if (points.length > 0) {\n                  context.moveTo(points[0].x, points[0].y);\n                  for (let i = 1; i < points.length; i++) {\n                    context.lineTo(points[i].x, points[i].y);\n                  }\n                  context.closePath();\n                }\n                context.fillStrokeShape(shape);\n              },\n              fill: 'rgba(191, 211, 230, 0.3)',\n              stroke: '#396895',\n              strokeWidth: 2\n            }\" />\n            <v-text :config=\"{\n              text: area.name,\n              x: calculateAreaCenter(parseCoordinates(area.coordinates)).x,\n              y: calculateAreaCenter(parseCoordinates(area.coordinates)).y,\n              fontSize: 16,\n              fontFamily: 'Arial',\n              fill: 'black',\n              align: 'center',\n              verticalAlign: 'middle'\n            }\" />\n          </template>\n\n          <!-- Área que se está dibujando actualmente -->\n          <v-line v-if=\"currentArea.length > 0 && drawMode\" :config=\"{\n            points: [...currentArea, mousePosition.x, mousePosition.y],\n            stroke: '#497fae',\n            strokeWidth: 2,\n            dash: [5, 5],\n            closed: false\n          }\" />\n        </v-layer>\n      </v-stage>\n\n      <!-- Botones de control -->\n\n      <button v-if=\"!backgroundimage\" @click=\"openUploadPlans\"\n        class=\"text-white bg-[#6999c2] hover:bg-[#28415c] focus:ring-4 focus:outline-none focus:ring-#497fae-300 font-medium rounded-lg text-base px-15 py-6 absolute inset-1/2 transform -translate-x-1/2 -translate-y-1/4 flex items-center justify-center\"\n        style=\"writing-mode: horizontal-tb; text-orientation: mixed;\">\n        Cargar plano\n      </button>\n\n\n    </div>\n\n    <!-- Modal para selección de área -->\n    <div v-if=\"showModal\" class=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center\">\n      <div class=\"bg-white p-4 rounded shadow-lg w-96\">\n        <h2 class=\"text-lg font-bold mb-4\">Asignar Área</h2>\n        <label for=\"area-select\" class=\"block text-sm font-medium text-gray-700\">Selecciona el área:</label>\n        <select id=\"area-select\" v-model=\"selectedAreaId\"\n          class=\"mt-2 block w-full p-2 border border-gray-300 rounded-md\">\n          <option v-for=\"area in areas\" :key=\"area._id\" :value=\"area._id\">\n            {{ area.name }}\n          </option>\n        </select>\n        <div class=\"mt-4 flex justify-end\">\n          <button class=\"px-4 py-2 bg-[#396895] text-white rounded hover:bg-[#396895] mr-2\" @click=\"confirmAreaSelection\">\n            Confirmar\n          </button>\n          <button class=\"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600\" @click=\"closeModal\">\n            Cancelar\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue';\n\nexport default {\n  props: {\n    name: {\n      type: String,\n      required: true,\n    },\n    backgroundimage: {\n      type: String,\n      required: true,\n    },\n    areas: {\n      type: Array,\n      required: true,\n    },\n  },\n\n  emits: ['uploadPlans', 'areaSelected'],\n\n  setup(props, { emit }) {\n    const stageConfig = {\n      width: 1300,\n      height: 570,\n    };\n\n    const stage = ref(null);\n    const backgroundImg = ref(null);\n    const drawMode = ref(false);\n    const showModal = ref(false);\n    const selectedAreaId = ref(null);\n    const currentArea = ref([]);\n    const coordinatesString = ref('');\n    const mousePosition = ref({ x: 0, y: 0 });\n    const cancelDraw = () => {\n      currentArea.value = [];\n    };\n\n\n    const handleMouseMove = () => {\n      const stageNode = stage.value.getNode();\n      const pointer = stageNode.getPointerPosition();\n      mousePosition.value = pointer || { x: 0, y: 0 };\n    };\n\n\n\n    const calculateAreaCenter = (points) => {\n      const totalPoints = points.length;\n      const sum = points.reduce(\n        (acc, point) => {\n          acc.x += point.x;\n          acc.y += point.y;\n          return acc;\n        },\n        { x: 0, y: 0 }\n      );\n\n      return {\n        x: sum.x / totalPoints,\n        y: sum.y / totalPoints,\n      };\n    };\n\n\n    // Procesa el string de coordenadas a un array de puntos\n    const parseCoordinates = (coordString) => {\n      return coordString\n        .split(')')\n        .map(pair => pair.trim())\n        .filter(pair => pair.length > 0)\n        .map(pair => {\n          const cleanPair = pair.replace('(', '').trim();\n          const [x, y] = cleanPair.split(',').map(num => parseFloat(num.trim()));\n          return { x, y };\n        });\n    };\n\n    // Cargar imagen de fondo\n    const loadBackgroundImage = () => {\n      if (props.backgroundimage) {\n        const image = new Image();\n        image.src = props.backgroundimage;\n        image.onload = () => {\n          backgroundImg.value = image;\n        };\n      }\n    };\n\n    const handleStageClick = () => {\n      if (!drawMode.value) return;\n\n      const point = stage.value.getNode().getPointerPosition();\n      currentArea.value = [...currentArea.value, point.x, point.y];\n\n      // Verificar si debemos cerrar el área\n      if (currentArea.value.length >= 8) {\n        const [startX, startY] = [currentArea.value[0], currentArea.value[1]];\n        const [lastX, lastY] = [\n          currentArea.value[currentArea.value.length - 2],\n          currentArea.value[currentArea.value.length - 1]\n        ];\n\n        const distance = Math.hypot(lastX - startX, lastY - startY);\n        if (distance < 10) {\n          // Crear string de coordenadas en el formato requerido\n          coordinatesString.value = currentArea.value\n            .reduce((acc, val, index) => {\n              if (index % 2 === 0) {\n                return [...acc, `(${val.toFixed(4)}, ${currentArea.value[index + 1].toFixed(4)})`];\n              }\n              return acc;\n            }, [])\n            .join(' ');\n\n          showModal.value = true;\n        }\n      }\n    };\n\n    const confirmAreaSelection = () => {\n      if (selectedAreaId.value) {\n        emit('areaSelected', {\n          id: selectedAreaId.value,\n          coordinates: coordinatesString.value\n        });\n        closeModal();\n      }\n    };\n\n    const closeModal = () => {\n      showModal.value = false;\n      selectedAreaId.value = null;\n      currentArea.value = [];\n    };\n\n    const toggleDrawMode = () => {\n      drawMode.value = !drawMode.value;\n    };\n\n    const openUploadPlans = () => {\n      emit('uploadPlans');\n    };\n\n    onMounted(() => {\n      loadBackgroundImage();\n      if (stage.value) {\n        stage.value.getNode().on('click', handleStageClick);\n      }\n    });\n\n    // Observar cambios en la imagen de fondo\n    watch(() => props.backgroundimage, loadBackgroundImage);\n\n    onMounted(() => {\n      stage.value.getNode().on('mousemove', handleMouseMove);\n    });\n\n    return {\n      stage,\n      stageConfig,\n      backgroundImg,\n      parseCoordinates,\n      currentArea,\n      drawMode,\n      showModal,\n      selectedAreaId,\n      coordinatesString,\n      toggleDrawMode,\n      openUploadPlans,\n      confirmAreaSelection,\n      closeModal,\n      calculateAreaCenter,\n      cancelDraw,\n      handleMouseMove,\n      mousePosition\n    };\n  },\n};\n</script>\n\n<style scoped>\n.mdi {\n  transition: color 0.3s ease;\n}\n</style>","import { render } from \"./ModalLayoutPlane.vue?vue&type=template&id=3ed3d8b6&scoped=true\"\nimport script from \"./ModalLayoutPlane.vue?vue&type=script&lang=js\"\nexport * from \"./ModalLayoutPlane.vue?vue&type=script&lang=js\"\n\nimport \"./ModalLayoutPlane.vue?vue&type=style&index=0&id=3ed3d8b6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3ed3d8b6\"]])\n\nexport default __exports__","<template>\n    <div class=\"fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center z-50\">\n      <div class=\"bg-white p-6 rounded-lg shadow-md w-96\">\n        <h2 class=\"text-lg font-bold mb-4\">Cargar Plano</h2>\n        <form @submit.prevent=\"submitForm\">\n          <input\n            type=\"file\"\n            @change=\"handleFileChange\"\n            accept=\"image/*\"\n            class=\"block w-full mb-4 border border-gray-300 rounded-lg\"\n          />\n          <div class=\"flex justify-end space-x-4\">\n            <button\n              type=\"button\"\n              @click=\"$emit('close')\"\n              class=\"px-4 py-2 bg-gray-400 text-white rounded-lg\"\n            >\n              Cancelar\n            </button>\n            <button\n              type=\"submit\"\n              class=\"px-4 py-2 bg-[#396895] text-white rounded-lg hover:bg-[#6999c2]\"\n            >\n              Subir\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import {ref} from \"vue\"\n  export default {\n    props: {\n      layoutId: {\n        type: String,\n        required: true,\n      },\n    },\n    emits: [\"close\", \"imageUploaded\"],\n    setup(props, { emit }) {\n      const file = ref(null);\n  \n      const handleFileChange = (event) => {\n        file.value = event.target.files[0];\n      };\n  \n      const submitForm = () => {\n        if (!file.value) return;\n  \n        const formData = new FormData();\n        formData.append(\"image\", file.value);\n        const id = props.layoutId\n        emit(\"imageUploaded\", formData, id);\n        emit(\"close\");\n      };\n  \n      return {\n        handleFileChange,\n        submitForm,\n      };\n    },\n  };\n  </script>\n  ","import { render } from \"./UploadPlanModal.vue?vue&type=template&id=6693abbb\"\nimport script from \"./UploadPlanModal.vue?vue&type=script&lang=js\"\nexport * from \"./UploadPlanModal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./MonitoringPlans.vue?vue&type=template&id=5926112e&scoped=true\"\nimport script from \"./MonitoringPlans.vue?vue&type=script&lang=js\"\nexport * from \"./MonitoringPlans.vue?vue&type=script&lang=js\"\n\nimport \"./MonitoringPlans.vue?vue&type=style&index=0&id=5926112e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5926112e\"]])\n\nexport default __exports__","// Styles\nimport './VTooltip.sass'\n\n// Components\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, mergeProps, ref } from 'vue'\nimport { genericComponent, getUid, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { StrategyProps } from '@/components/VOverlay/locationStrategies'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVTooltipProps = propsFactory({\n  id: String,\n  text: String,\n\n  ...omit(makeVOverlayProps({\n    closeOnBack: false,\n    location: 'end' as const,\n    locationStrategy: 'connected' as const,\n    eager: true,\n    minWidth: 0,\n    offset: 10,\n    openOnClick: false,\n    openOnHover: true,\n    origin: 'auto' as const,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: false,\n  }), [\n    'absolute',\n    'persistent',\n  ]),\n}, 'VTooltip')\n\nexport const VTooltip = genericComponent<OverlaySlots>()({\n  name: 'VTooltip',\n\n  props: makeVTooltipProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-tooltip-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const location = computed(() => {\n      return props.location.split(' ').length > 1\n        ? props.location\n        : props.location + ' center' as StrategyProps['location']\n    })\n\n    const origin = computed(() => {\n      return (\n        props.origin === 'auto' ||\n        props.origin === 'overlap' ||\n        props.origin.split(' ').length > 1 ||\n        props.location.split(' ').length > 1\n      ) ? props.origin\n        : props.origin + ' center' as StrategyProps['origin']\n    })\n\n    const transition = computed(() => {\n      if (props.transition) return props.transition\n      return isActive.value ? 'scale-transition' : 'fade-transition'\n    })\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-describedby': id.value,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-tooltip',\n            props.class,\n          ]}\n          style={ props.style }\n          id={ id.value }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          transition={ transition.value }\n          absolute\n          location={ location.value }\n          origin={ origin.value }\n          persistent\n          role=\"tooltip\"\n          activatorProps={ activatorProps.value }\n          _disableGlobalStack\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => slots.default?.(...args) ?? props.text,\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({}, overlay)\n  },\n})\n\nexport type VTooltip = InstanceType<typeof VTooltip>\n"],"names":["baseURL","process","listAreasApi","token","axiosInstance","get","headers","Authorization","deleteAreaApi","id","delete","createAreaApi","payload","post","updateAreaApi","patch","coordinatesAreaApi","listLayoutApi","deleteLayoutApi","createLayoutApi","updateLayoutApi","uploadLayoutApi","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$setup","selectedLayout","_createBlock","_component_ModalLayoutPlane","key","_id","name","backgroundimage","backgroundImage","areas","onUploadPlans","openUploadModal","onAreaSelected","selectCoordinates","_createCommentVNode","_hoisted_3","_Fragment","_renderList","layouts","layout","index","_component_v_tooltip","text","activator","_withCtx","props","_mergeProps","ref_for","selectedIndex","onClick","$event","selectLayout","_hoisted_4","_","showUploadModal","_component_UploadPlanModal","layoutId","onClose","_cache","onImageUploaded","handleImageUpload","_createTextVNode","_toDisplayString","$props","args","openUploadPlans","_normalizeClass","drawMode","toggleDrawMode","currentArea","length","cancelDraw","_createVNode","_component_v_stage","ref","config","stageConfig","default","_component_v_layer","_component_v_image","backgroundImg","width","height","area","_component_v_shape","context","shape","points","parseCoordinates","coordinates","beginPath","moveTo","x","y","i","lineTo","closePath","fillStrokeShape","_component_v_text","calculateAreaCenter","_component_v_line","mousePosition","style","showModal","_hoisted_5","for","selectedAreaId","value","_hoisted_6","_hoisted_7","confirmAreaSelection","closeModal","type","String","required","Array","emits","setup","emit","stage","coordinatesString","handleMouseMove","stageNode","getNode","pointer","getPointerPosition","totalPoints","sum","reduce","acc","point","coordString","split","map","pair","trim","filter","cleanPair","replace","num","parseFloat","loadBackgroundImage","image","Image","src","onload","handleStageClick","startX","startY","lastX","lastY","distance","Math","hypot","val","toFixed","join","onMounted","on","watch","__exports__","onSubmit","_withModifiers","submitForm","onChange","handleFileChange","accept","_ctx","$emit","file","event","target","files","formData","FormData","append","components","ModalLayoutPlane","UploadPlanModal","error","store","state","listLayouts","async","response","data","message","err","console","computed","render","makeVTooltipProps","propsFactory","omit","makeVOverlayProps","closeOnBack","location","locationStrategy","eager","minWidth","offset","openOnClick","openOnHover","origin","scrim","scrollStrategy","transition","VTooltip","genericComponent","_ref","slots","isActive","useProxiedModel","scopeId","useScopeId","uid","getUid","overlay","activatorProps","mergeProps","useRender","overlayProps","VOverlay","filterProps","_len","arguments","_key","forwardRefs"],"sourceRoot":""}